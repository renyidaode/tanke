<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.DealerMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Dealer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dealer_name" jdbcType="VARCHAR" property="dealerName" />
    <result column="dealer_address" jdbcType="VARCHAR" property="dealerAddress" />
    <result column="dealer_code" jdbcType="VARCHAR" property="dealerCode" />
    <result column="dealer_coordinates" jdbcType="VARCHAR" property="dealerCoordinates" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="contact_number" jdbcType="VARCHAR" property="contactNumber" />
    <result column="dealer_status" jdbcType="INTEGER" property="dealerStatus" />
    <result column="deleted_status" jdbcType="BIT" property="deletedStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dealer_name, dealer_address, dealer_code, dealer_coordinates, area_id, contact_number, 
    dealer_status, deleted_status
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.DealerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dealer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dealer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dealer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.DealerExample">
    delete from dealer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Dealer">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dealer (dealer_name, dealer_address, dealer_code, 
      dealer_coordinates, area_id, contact_number, 
      dealer_status, deleted_status)
    values (#{dealerName,jdbcType=VARCHAR}, #{dealerAddress,jdbcType=VARCHAR}, #{dealerCode,jdbcType=VARCHAR}, 
      #{dealerCoordinates,jdbcType=VARCHAR}, #{areaId,jdbcType=BIGINT}, #{contactNumber,jdbcType=VARCHAR}, 
      #{dealerStatus,jdbcType=INTEGER}, #{deletedStatus,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Dealer">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dealer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dealerName != null">
        dealer_name,
      </if>
      <if test="dealerAddress != null">
        dealer_address,
      </if>
      <if test="dealerCode != null">
        dealer_code,
      </if>
      <if test="dealerCoordinates != null">
        dealer_coordinates,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="dealerStatus != null">
        dealer_status,
      </if>
      <if test="deletedStatus != null">
        deleted_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dealerName != null">
        #{dealerName,jdbcType=VARCHAR},
      </if>
      <if test="dealerAddress != null">
        #{dealerAddress,jdbcType=VARCHAR},
      </if>
      <if test="dealerCode != null">
        #{dealerCode,jdbcType=VARCHAR},
      </if>
      <if test="dealerCoordinates != null">
        #{dealerCoordinates,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="dealerStatus != null">
        #{dealerStatus,jdbcType=INTEGER},
      </if>
      <if test="deletedStatus != null">
        #{deletedStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.DealerExample" resultType="java.lang.Long">
    select count(*) from dealer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dealer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.dealerName != null">
        dealer_name = #{record.dealerName,jdbcType=VARCHAR},
      </if>
      <if test="record.dealerAddress != null">
        dealer_address = #{record.dealerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.dealerCode != null">
        dealer_code = #{record.dealerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dealerCoordinates != null">
        dealer_coordinates = #{record.dealerCoordinates,jdbcType=VARCHAR},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=BIGINT},
      </if>
      <if test="record.contactNumber != null">
        contact_number = #{record.contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.dealerStatus != null">
        dealer_status = #{record.dealerStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deletedStatus != null">
        deleted_status = #{record.deletedStatus,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dealer
    set id = #{record.id,jdbcType=BIGINT},
      dealer_name = #{record.dealerName,jdbcType=VARCHAR},
      dealer_address = #{record.dealerAddress,jdbcType=VARCHAR},
      dealer_code = #{record.dealerCode,jdbcType=VARCHAR},
      dealer_coordinates = #{record.dealerCoordinates,jdbcType=VARCHAR},
      area_id = #{record.areaId,jdbcType=BIGINT},
      contact_number = #{record.contactNumber,jdbcType=VARCHAR},
      dealer_status = #{record.dealerStatus,jdbcType=INTEGER},
      deleted_status = #{record.deletedStatus,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Dealer">
    update dealer
    <set>
      <if test="dealerName != null">
        dealer_name = #{dealerName,jdbcType=VARCHAR},
      </if>
      <if test="dealerAddress != null">
        dealer_address = #{dealerAddress,jdbcType=VARCHAR},
      </if>
      <if test="dealerCode != null">
        dealer_code = #{dealerCode,jdbcType=VARCHAR},
      </if>
      <if test="dealerCoordinates != null">
        dealer_coordinates = #{dealerCoordinates,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="dealerStatus != null">
        dealer_status = #{dealerStatus,jdbcType=INTEGER},
      </if>
      <if test="deletedStatus != null">
        deleted_status = #{deletedStatus,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Dealer">
    update dealer
    set dealer_name = #{dealerName,jdbcType=VARCHAR},
      dealer_address = #{dealerAddress,jdbcType=VARCHAR},
      dealer_code = #{dealerCode,jdbcType=VARCHAR},
      dealer_coordinates = #{dealerCoordinates,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=BIGINT},
      contact_number = #{contactNumber,jdbcType=VARCHAR},
      dealer_status = #{dealerStatus,jdbcType=INTEGER},
      deleted_status = #{deletedStatus,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>