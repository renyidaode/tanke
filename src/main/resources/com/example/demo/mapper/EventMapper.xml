<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.EventMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Event">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="main_image_url" jdbcType="VARCHAR" property="mainImageUrl" />
    <result column="user_reward_count" jdbcType="INTEGER" property="userRewardCount" />
    <result column="event_status" jdbcType="INTEGER" property="eventStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="event_type" jdbcType="INTEGER" property="eventType" />
    <result column="start_datetime" jdbcType="TIMESTAMP" property="startDatetime" />
    <result column="end_datetime" jdbcType="TIMESTAMP" property="endDatetime" />
    <result column="deleted_status" jdbcType="BIT" property="deletedStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.model.Event">
    <result column="main_html" jdbcType="LONGVARCHAR" property="mainHtml" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, main_image_url, user_reward_count, event_status, create_time, update_time, 
    event_type, start_datetime, end_datetime, deleted_status
  </sql>

  <sql id="Blob_Column_List">
    main_html
  </sql>

  <select id="selectByExampleWithBLOBs" parameterType="com.example.demo.model.EventExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample" parameterType="com.example.demo.model.EventExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from event
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from event
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.EventExample">
    delete from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Event">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event (title, main_image_url, user_reward_count, 
      event_status, create_time, update_time, 
      event_type, start_datetime, end_datetime, 
      deleted_status, main_html)
    values (#{title,jdbcType=VARCHAR}, #{mainImageUrl,jdbcType=VARCHAR}, #{userRewardCount,jdbcType=INTEGER}, 
      #{eventStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{eventType,jdbcType=INTEGER}, #{startDatetime,jdbcType=TIMESTAMP}, #{endDatetime,jdbcType=TIMESTAMP}, 
      #{deletedStatus,jdbcType=BIT}, #{mainHtml,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Event">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="mainImageUrl != null">
        main_image_url,
      </if>
      <if test="userRewardCount != null">
        user_reward_count,
      </if>
      <if test="eventStatus != null">
        event_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="eventType != null">
        event_type,
      </if>
      <if test="startDatetime != null">
        start_datetime,
      </if>
      <if test="endDatetime != null">
        end_datetime,
      </if>
      <if test="deletedStatus != null">
        deleted_status,
      </if>
      <if test="mainHtml != null">
        main_html,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="mainImageUrl != null">
        #{mainImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userRewardCount != null">
        #{userRewardCount,jdbcType=INTEGER},
      </if>
      <if test="eventStatus != null">
        #{eventStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventType != null">
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="startDatetime != null">
        #{startDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="endDatetime != null">
        #{endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedStatus != null">
        #{deletedStatus,jdbcType=BIT},
      </if>
      <if test="mainHtml != null">
        #{mainHtml,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.EventExample" resultType="java.lang.Long">
    select count(*) from event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update event
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.mainImageUrl != null">
        main_image_url = #{record.mainImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.userRewardCount != null">
        user_reward_count = #{record.userRewardCount,jdbcType=INTEGER},
      </if>
      <if test="record.eventStatus != null">
        event_status = #{record.eventStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eventType != null">
        event_type = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.startDatetime != null">
        start_datetime = #{record.startDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDatetime != null">
        end_datetime = #{record.endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedStatus != null">
        deleted_status = #{record.deletedStatus,jdbcType=BIT},
      </if>
      <if test="record.mainHtml != null">
        main_html = #{record.mainHtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update event
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      main_image_url = #{record.mainImageUrl,jdbcType=VARCHAR},
      user_reward_count = #{record.userRewardCount,jdbcType=INTEGER},
      event_status = #{record.eventStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      event_type = #{record.eventType,jdbcType=INTEGER},
      start_datetime = #{record.startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{record.endDatetime,jdbcType=TIMESTAMP},
      deleted_status = #{record.deletedStatus,jdbcType=BIT},
      main_html = #{record.mainHtml,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      main_image_url = #{record.mainImageUrl,jdbcType=VARCHAR},
      user_reward_count = #{record.userRewardCount,jdbcType=INTEGER},
      event_status = #{record.eventStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      event_type = #{record.eventType,jdbcType=INTEGER},
      start_datetime = #{record.startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{record.endDatetime,jdbcType=TIMESTAMP},
      deleted_status = #{record.deletedStatus,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Event">
    update event
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="mainImageUrl != null">
        main_image_url = #{mainImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userRewardCount != null">
        user_reward_count = #{userRewardCount,jdbcType=INTEGER},
      </if>
      <if test="eventStatus != null">
        event_status = #{eventStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventType != null">
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="startDatetime != null">
        start_datetime = #{startDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="endDatetime != null">
        end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedStatus != null">
        deleted_status = #{deletedStatus,jdbcType=BIT},
      </if>
      <if test="mainHtml != null">
        main_html = #{mainHtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.model.Event">
    update event
    set title = #{title,jdbcType=VARCHAR},
      main_image_url = #{mainImageUrl,jdbcType=VARCHAR},
      user_reward_count = #{userRewardCount,jdbcType=INTEGER},
      event_status = #{eventStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      event_type = #{eventType,jdbcType=INTEGER},
      start_datetime = #{startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      deleted_status = #{deletedStatus,jdbcType=BIT},
      main_html = #{mainHtml,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Event">
    update event
    set title = #{title,jdbcType=VARCHAR},
      main_image_url = #{mainImageUrl,jdbcType=VARCHAR},
      user_reward_count = #{userRewardCount,jdbcType=INTEGER},
      event_status = #{eventStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      event_type = #{eventType,jdbcType=INTEGER},
      start_datetime = #{startDatetime,jdbcType=TIMESTAMP},
      end_datetime = #{endDatetime,jdbcType=TIMESTAMP},
      deleted_status = #{deletedStatus,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>